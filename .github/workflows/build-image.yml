# This is a basic workflow to help you get started with Actions

name: Build teslausb image

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main-dev branch
  # push:
  #   branches: [ main-dev ]
  page_build:
  release:
    types: # This configuration does not affect the page_build event above
      - created

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout tools repo
        uses: actions/checkout@v2
        with:
          repository: RPi-Distro/pi-gen
          path: pi-gen
     
      - name: Show env info
        run: whoami && pwd && ls -la && ls -la pi-gen

      - name: Install dependences
        run: |
          sudo  apt-get update && sudo apt-get -y install coreutils quilt parted qemu-user-static debootstrap zerofree zip \
          dosfstools libarchive-tools libcap2-bin grep rsync xz-utils file git curl bc \
          qemu-utils kpartx 

      - name: Prepare pi-gen config
        run: |
          cd pi-gen
          cat <<- EOF > config
          IMG_NAME=teslausb
          HOSTNAME=teslausb
          STAGE_LIST="stage0 stage1 stage2 stage_teslausb"
          EOF
          rm -rf stage2/EXPORT_NOOBS
          mkdir stage_teslausb
          touch stage_teslausb/EXPORT_IMAGE
          cp stage2/prerun.sh stage_teslausb/prerun.sh
          cp -R ../pi-gen-sources/00-teslausb-tweaks ./stage_teslausb
          sed -i -e "s/200 \* 1024 \* 1024/400 \* 1024 \* 1024/g" export-image/prerun.sh
          ls -la stage_teslausb && cat config

      - name: Deploy
        run: |
          cd pi-gen && sudo bash build.sh
          ls deploy && cat deploy/**-teslausb-lite.info
          
      - name: Upload build image zip
        uses: actions/upload-artifact@v2
        with:
          name: teslausb-image
          path: pi-gen/deploy/image_**-teslausb-lite.zip
